version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL:-sqlite:./data/app.db}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    volumes:
      - backend_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "80:80"
    environment:
      - EXPO_PUBLIC_API_URL=http://backend:3000/api
    depends_on:
      - backend
    restart: unless-stopped

  # Database (PostgreSQL для production)
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-military_app}
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis для кэширования и сессий
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  backend_data:
  postgres_data:
  redis_data: