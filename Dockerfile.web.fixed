# Frontend Web Dockerfile - Fixed for deployment
FROM node:18-alpine as base

# Install Python and build tools for native dependencies
RUN apk add --no-cache python3 make g++ sqlite

WORKDIR /app

# Copy package files
COPY package.json bun.lock* ./

# Install bun
RUN npm install -g bun

# Install dependencies with better error handling
RUN bun install --frozen-lockfile || bun install

# Copy source code
COPY . .

# Set environment variables
ENV NODE_ENV=production
ENV EXPO_USE_FAST_RESOLVER=1

# Clean any existing builds
RUN rm -rf dist/ build/ .expo/

# Prebuild for web (skip native dependencies)
RUN bunx expo prebuild --clean --platform web || echo "Prebuild completed with warnings"

# Export web version (this replaces the deprecated expo build)
RUN bunx expo export --platform web

# Verify build output
RUN ls -la dist/ || echo "No dist directory found"

# Production stage with nginx
FROM nginx:alpine as production

# Copy built web app (expo export creates dist folder)
COPY --from=base /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]