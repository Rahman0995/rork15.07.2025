#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏
function removeDir(dirPath) {
  if (fs.existsSync(dirPath)) {
    console.log(`–£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É: ${dirPath}`);
    fs.rmSync(dirPath, { recursive: true, force: true });
  }
}

// –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞–ø–∫–∏
const duplicatedPaths = [
  'home/user/rork-app/home',
  'home/user/rork-app/app',
  'home/user/rork-app/backend',
  'home/user/rork-app/components',
  'home/user/rork-app/constants',
  'home/user/rork-app/lib',
  'home/user/rork-app/store',
  'home/user/rork-app/types',
  'home/user/rork-app/utils'
];

console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');

duplicatedPaths.forEach(dirPath => {
  removeDir(dirPath);
});

// –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É home –ø–æ–ª–Ω–æ—Å—Ç—å—é, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
removeDir('home');

console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('üìÅ –û—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');