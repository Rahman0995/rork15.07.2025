#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º...\n');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º .env —Ñ–∞–π–ª
console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª...');
const envPath = '.env';
let envFixed = false;

if (!fs.existsSync(envPath)) {
  console.log('‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º...');
  envFixed = true;
} else {
  const envContent = fs.readFileSync(envPath, 'utf8');
  if (!envContent.includes('EXPO_PUBLIC_SUPABASE_URL') || !envContent.includes('EXPO_PUBLIC_SUPABASE_ANON_KEY')) {
    console.log('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –¥–æ–±–∞–≤–ª—è–µ–º...');
    envFixed = true;
  } else {
    console.log('‚úÖ .env —Ñ–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
  }
}

if (envFixed) {
  const envContent = `# Development Environment Variables
NODE_ENV=development

# API Configuration
EXPO_PUBLIC_RORK_API_BASE_URL=http://localhost:3000
LOCAL_IP=192.168.1.100

# Network Configuration
NETWORK_TIMEOUT=30000
REQUEST_RETRIES=3
ENABLE_MOCK_DATA=true

# Fallback URLs
FALLBACK_URL_1=http://127.0.0.1:3000
FALLBACK_URL_2=http://192.168.0.100:3000
FALLBACK_URL_3=http://10.0.0.100:3000

# Database Configuration
DATABASE_URL=mysql://root:iIZFrgdMlpXAJrScrhPwSsYjmjKcyfLT@switchyard.proxy.rlwy.net:13348/railway
MYSQL_MYSQL_URL=mysql://root:iIZFrgdMlpXAJrScrhPwSsYjmjKcyfLT@switchyard.proxy.rlwy.net:13348/railway

# JWT Secret for authentication
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# Server Configuration
API_PORT=3000
API_HOST=0.0.0.0

# Supabase Configuration (—Ä–∞–±–æ—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
EXPO_PUBLIC_SUPABASE_URL=https://qcdqofdmflhgsabyopfe.supabase.co
EXPO_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFjZHFvZmRtZmxoZ3NhYnlvcGZlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI5ODkxNTMsImV4cCI6MjA2ODU2NTE1M30.qYn87AuahL4H9Tin8nVIKlH9-3UnCmtHGEBOA3RhyjU
`;
  
  fs.writeFileSync(envPath, envContent);
  console.log('‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω');
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...');
const packageJsonPath = 'package.json';
if (fs.existsSync(packageJsonPath)) {
  const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
  const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };
  
  const requiredDeps = [
    '@supabase/supabase-js',
    '@nkzw/create-context-hook',
    '@trpc/client',
    '@trpc/react-query'
  ];
  
  const missingDeps = requiredDeps.filter(dep => !dependencies[dep]);
  
  if (missingDeps.length > 0) {
    console.log(`‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missingDeps.join(', ')}`);
    console.log('üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π: bun install ' + missingDeps.join(' '));
  } else {
    console.log('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  }
} else {
  console.log('‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// 3. –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞
console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞...');

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
const testScript = `#!/usr/bin/env node

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...\\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('1Ô∏è‚É£ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;

console.log('   Supabase URL:', supabaseUrl ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
console.log('   Supabase Key:', supabaseKey ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±—ç–∫–µ–Ω–¥—É
console.log('\\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞...');
const http = require('http');

const testUrls = [
  'http://localhost:3000/api/health',
  'http://127.0.0.1:3000/api/health',
  'http://192.168.1.100:3000/api/health'
];

async function testUrl(url) {
  return new Promise((resolve) => {
    const req = http.get(url, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        try {
          const parsed = JSON.parse(data);
          resolve({ url, success: true, status: res.statusCode, data: parsed });
        } catch (e) {
          resolve({ url, success: false, error: 'Invalid JSON' });
        }
      });
    });
    
    req.on('error', () => resolve({ url, success: false, error: 'Connection failed' }));
    req.setTimeout(3000, () => {
      req.destroy();
      resolve({ url, success: false, error: 'Timeout' });
    });
  });
}

async function testBackend() {
  let backendWorking = false;
  
  for (const url of testUrls) {
    console.log(\`   –¢–µ—Å—Ç–∏—Ä—É–µ–º: \${url}\`);
    const result = await testUrl(url);
    
    if (result.success) {
      console.log(\`   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç! –°—Ç–∞—Ç—É—Å: \${result.status}\`);
      backendWorking = true;
      break;
    } else {
      console.log(\`   ‚ùå –û—à–∏–±–∫–∞: \${result.error}\`);
    }
  }
  
  if (!backendWorking) {
    console.log('\\n‚ùå –ë—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫–µ–Ω–¥: node start-backend-simple.js');
  } else {
    console.log('\\n‚úÖ –ë—ç–∫–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  }
  
  return backendWorking;
}

testBackend().then(backendWorking => {
  console.log('\\n3Ô∏è‚É£ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log('   Supabase:', (supabaseUrl && supabaseKey) ? '‚úÖ' : '‚ùå');
  console.log('   –ë—ç–∫–µ–Ω–¥:', backendWorking ? '‚úÖ' : '‚ùå');
  
  if ((supabaseUrl && supabaseKey) && backendWorking) {
    console.log('\\nüéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
    console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: node start-app-complete.js');
  } else {
    console.log('\\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞');
    if (!backendWorking) {
      console.log('   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫–µ–Ω–¥: node start-backend-simple.js');
    }
  }
}).catch(console.error);
`;

fs.writeFileSync('test-system.js', testScript);
console.log('‚úÖ –°–æ–∑–¥–∞–Ω test-system.js');

// 4. –°–æ–∑–¥–∞–µ–º README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
console.log('\n4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏...');
const readmeContent = `# üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

## üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
\`\`\`bash
node test-system.js
\`\`\`

## üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
\`\`\`bash
node fix-all-issues.js
\`\`\`

## üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

### –í–∞—Ä–∏–∞–Ω—Ç 1: –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ (–±—ç–∫–µ–Ω–¥ + —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
\`\`\`bash
node start-app-complete.js
\`\`\`

### –í–∞—Ä–∏–∞–Ω—Ç 2: –†–∞–∑–¥–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫

1. –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞:
\`\`\`bash
node start-backend-simple.js
\`\`\`

2. –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–≤ –Ω–æ–≤–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ):
\`\`\`bash
npm start
\`\`\`

## üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
\`\`\`bash
node test-connection-simple.js
\`\`\`

## üì± –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é

- **Web**: http://localhost:8081
- **Mobile**: –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
- **Backend API**: http://localhost:3000/api

## ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏

–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ñ–∞–π–ª–µ \`.env\`:
- Supabase URL –∏ –∫–ª—é—á
- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

## üÜò –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

1. **–û—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±—ç–∫–µ–Ω–¥—É**:
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–ø—É—â–µ–Ω –ª–∏ –±—ç–∫–µ–Ω–¥
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω

2. **–ü—Ä–æ–±–ª–µ–º—ã —Å Supabase**:
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ
   - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ mock —Ä–µ–∂–∏–º–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ Supabase

3. **–û—à–∏–±–∫–∏ —Å–µ—Ç–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º**:
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ —Ç–æ–π –∂–µ —Å–µ—Ç–∏
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ LOCAL_IP –≤ .env —Ñ–∞–π–ª–µ

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ \`node test-system.js\`
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
`;

fs.writeFileSync('QUICK_START.md', readmeContent);
console.log('‚úÖ –°–æ–∑–¥–∞–Ω QUICK_START.md');

console.log('\nüéâ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. node test-system.js     - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É');
console.log('2. node start-app-complete.js - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ QUICK_START.md');