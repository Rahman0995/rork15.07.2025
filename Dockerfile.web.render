# Dockerfile для деплоя веб-версии на Render
FROM node:18-alpine as builder
WORKDIR /app

# Установка системных зависимостей
RUN apk add --no-cache python3 make g++

# Копирование файлов зависимостей
COPY package.web.json package.json
COPY package-lock.json* yarn.lock* ./

# Установка зависимостей
RUN npm ci --only=production || npm install

# Копирование исходного кода
COPY . .

# Установка переменных окружения для сборки
ENV NODE_ENV=production
ENV EXPO_USE_FAST_RESOLVER=1

# Очистка предыдущих сборок
RUN rm -rf dist/ build/ .expo/

# Сборка веб-версии
RUN npx expo export --platform web --output-dir dist

# Production stage с nginx
FROM nginx:alpine
WORKDIR /usr/share/nginx/html

# Удаление стандартных файлов nginx
RUN rm -rf ./*

# Копирование собранного приложения
COPY --from=builder /app/dist .

# Копирование конфигурации nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Открытие порта
EXPOSE 80

# Запуск nginx
CMD ["nginx", "-g", "daemon off;"]