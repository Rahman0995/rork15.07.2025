#!/usr/bin/env node

const crypto = require('crypto');
const fs = require('fs');
const path = require('path');

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π JWT —Å–µ–∫—Ä–µ—Ç
const generateJWTSecret = () => {
  return crypto.randomBytes(64).toString('hex');
};

// –û–±–Ω–æ–≤–ª—è–µ–º .env.production —Ñ–∞–π–ª
const updateProductionEnv = () => {
  const envPath = path.join(__dirname, '..', '.env.production');
  const newSecret = generateJWTSecret();
  
  try {
    let envContent = fs.readFileSync(envPath, 'utf8');
    
    // –ó–∞–º–µ–Ω—è–µ–º JWT_SECRET
    envContent = envContent.replace(
      /JWT_SECRET=.*/,
      `JWT_SECRET=${newSecret}`
    );
    
    fs.writeFileSync(envPath, envContent);
    
    console.log('‚úÖ JWT_SECRET —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ .env.production');
    console.log('üîê –ù–æ–≤—ã–π JWT_SECRET:', newSecret);
    console.log('');
    console.log('‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–µ–∫—Ä–µ—Ç –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!');
    console.log('‚ö†Ô∏è  –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è —Å—Ç–∞—Ä—ã–µ JWT —Ç–æ–∫–µ–Ω—ã —Å—Ç–∞–Ω—É—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ .env.production:', error.message);
    console.log('üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JWT_SECRET:', newSecret);
    console.log('üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –≤ .env.production');
  }
};

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);

if (args.includes('--help') || args.includes('-h')) {
  console.log(`
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä JWT —Å–µ–∫—Ä–µ—Ç–∞ –¥–ª—è production

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node scripts/generate-jwt-secret.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --only-generate, -g    –¢–æ–ª—å–∫–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ–∫—Ä–µ—Ç (–Ω–µ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ñ–∞–π–ª)
  --help, -h            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  node scripts/generate-jwt-secret.js           # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å .env.production
  node scripts/generate-jwt-secret.js -g       # –¢–æ–ª—å–∫–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ–∫—Ä–µ—Ç
`);
  process.exit(0);
}

if (args.includes('--only-generate') || args.includes('-g')) {
  const secret = generateJWTSecret();
  console.log('üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JWT_SECRET:');
  console.log(secret);
} else {
  updateProductionEnv();
}