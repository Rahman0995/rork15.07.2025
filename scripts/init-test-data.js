#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Supabase
 * –ó–∞–ø—É—Å–∫: node scripts/init-test-data.js
 */

const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://qcdqofdmflhgsabyopfe.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFjZHFvZmRtZmxoZ3NhYnlvcGZlIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mjk4OTE1MywiZXhwIjoyMDY4NTY1MTUzfQ.Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7E'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à service_role –∫–ª—é—á

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
const testUsers = [
  {
    id: '550e8400-e29b-41d4-a716-446655440001',
    email: 'admin@military.gov',
    password: 'admin123456',
    first_name: '–ò–≤–∞–Ω',
    last_name: '–ó–∏–Ω–≥–∏–µ–≤',
    rank: '–ü–æ–ª–∫–æ–≤–Ω–∏–∫',
    role: 'admin',
    unit: '1-–π –±–∞—Ç–∞–ª—å–æ–Ω',
    phone: '+7-900-123-4567',
    avatar_url: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face'
  },
  {
    id: '550e8400-e29b-41d4-a716-446655440002',
    email: 'petrov@military.gov',
    password: 'petrov123456',
    first_name: '–ê–ª–µ–∫—Å–µ–π',
    last_name: '–ü–µ—Ç—Ä–æ–≤',
    rank: '–ú–∞–π–æ—Ä',
    role: 'battalion_commander',
    unit: '1-—è —Ä–æ—Ç–∞',
    phone: '+7-900-234-5678',
    avatar_url: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face'
  },
  {
    id: '550e8400-e29b-41d4-a716-446655440003',
    email: 'sidorov@military.gov',
    password: 'sidorov123456',
    first_name: '–ú–∏—Ö–∞–∏–ª',
    last_name: '–°–∏–¥–æ—Ä–æ–≤',
    rank: '–ö–∞–ø–∏—Ç–∞–Ω',
    role: 'company_commander',
    unit: '2-—è —Ä–æ—Ç–∞',
    phone: '+7-900-345-6789',
    avatar_url: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face'
  },
  {
    id: '550e8400-e29b-41d4-a716-446655440004',
    email: 'kozlov@military.gov',
    password: 'kozlov123456',
    first_name: '–°–µ—Ä–≥–µ–π',
    last_name: '–ö–æ–∑–ª–æ–≤',
    rank: '–°–µ—Ä–∂–∞–Ω—Ç',
    role: 'soldier',
    unit: '1-—è —Ä–æ—Ç–∞',
    phone: '+7-900-456-7890',
    avatar_url: 'https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?w=150&h=150&fit=crop&crop=face'
  }
];

// –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
const testTasks = [
  {
    title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
    description: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏',
    status: 'pending',
    priority: 'high',
    assigned_to: '550e8400-e29b-41d4-a716-446655440004',
    created_by: '550e8400-e29b-41d4-a716-446655440002',
    due_date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString()
  },
  {
    title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞',
    description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è',
    status: 'in_progress',
    priority: 'medium',
    assigned_to: '550e8400-e29b-41d4-a716-446655440003',
    created_by: '550e8400-e29b-41d4-a716-446655440001',
    due_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString()
  }
];

// –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã
const testReports = [
  {
    title: '–û—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —É—á–µ–Ω–∏—è—Ö',
    content: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É—á–µ–Ω–∏–π',
    type: 'training',
    status: 'pending',
    created_by: '550e8400-e29b-41d4-a716-446655440003'
  },
  {
    title: '–û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ç–µ—Ö–Ω–∏–∫–∏',
    content: '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–æ–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏',
    type: 'equipment',
    status: 'approved',
    created_by: '550e8400-e29b-41d4-a716-446655440004'
  }
];

async function createTestData() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    for (const user of testUsers) {
      try {
        // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Auth
        const { data: authData, error: authError } = await supabase.auth.admin.createUser({
          email: user.email,
          password: user.password,
          email_confirm: true,
          user_metadata: {
            first_name: user.first_name,
            last_name: user.last_name,
            rank: user.rank,
            role: user.role,
            unit: user.unit,
            phone: user.phone
          }
        });

        if (authError && !authError.message.includes('already registered')) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email}:`, authError.message);
          continue;
        }

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ users
        const { error: profileError } = await supabase
          .from('users')
          .upsert({
            id: user.id,
            email: user.email,
            password_hash: '',
            first_name: user.first_name,
            last_name: user.last_name,
            rank: user.rank,
            role: user.role,
            unit: user.unit,
            phone: user.phone,
            avatar_url: user.avatar_url
          });

        if (profileError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è ${user.email}:`, profileError.message);
        } else {
          console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${user.first_name} ${user.last_name} (${user.role})`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email}:`, error.message);
      }
    }

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á...');
    for (const task of testTasks) {
      try {
        const { error } = await supabase
          .from('tasks')
          .insert(task);

        if (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ "${task.title}":`, error.message);
        } else {
          console.log(`‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: ${task.title}`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏ "${task.title}":`, error.message);
      }
    }

    // 3. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
    console.log('\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤...');
    for (const report of testReports) {
      try {
        const { error } = await supabase
          .from('reports')
          .insert(report);

        if (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ "${report.title}":`, error.message);
        } else {
          console.log(`‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${report.title}`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞ "${report.title}":`, error.message);
      }
    }

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('\nüì± –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ª—é–±—ã–º –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:');
    testUsers.forEach(user => {
      console.log(`  - ${user.email} / ${user.password} (${user.role})`);
    });

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createTestData();