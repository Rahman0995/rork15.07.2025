#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Supabase
 * –ó–∞–ø—É—Å–∫: node scripts/init-test-data.js
 */

const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://qcdqofdmflhgsabyopfe.supabase.co';
const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFjZHFvZmRtZmxoZ3NhYnlvcGZlIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mjk4OTE1MywiZXhwIjoyMDY4NTY1MTUzfQ.Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7Ej7E';

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
const testUsers = [
  {
    id: '550e8400-e29b-41d4-a716-446655440001',
    email: 'admin@military.gov',
    password: 'admin123456',
    first_name: '–ò–≤–∞–Ω',
    last_name: '–ó–∏–Ω–≥–∏–µ–≤',
    rank: '–ü–æ–ª–∫–æ–≤–Ω–∏–∫',
    role: 'admin',
    unit: '1-–π –±–∞—Ç–∞–ª—å–æ–Ω',
    phone: '+7-900-123-4567',
    avatar_url: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face'
  },
  {
    id: '550e8400-e29b-41d4-a716-446655440002',
    email: 'petrov@military.gov',
    password: 'petrov123456',
    first_name: '–ê–ª–µ–∫—Å–µ–π',
    last_name: '–ü–µ—Ç—Ä–æ–≤',
    rank: '–ú–∞–π–æ—Ä',
    role: 'battalion_commander',
    unit: '1-—è —Ä–æ—Ç–∞',
    phone: '+7-900-234-5678',
    avatar_url: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face'
  },
  {
    id: '550e8400-e29b-41d4-a716-446655440003',
    email: 'sidorov@military.gov',
    password: 'sidorov123456',
    first_name: '–ú–∏—Ö–∞–∏–ª',
    last_name: '–°–∏–¥–æ—Ä–æ–≤',
    rank: '–ö–∞–ø–∏—Ç–∞–Ω',
    role: 'company_commander',
    unit: '2-—è —Ä–æ—Ç–∞',
    phone: '+7-900-345-6789',
    avatar_url: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face'
  },
  {
    id: '550e8400-e29b-41d4-a716-446655440004',
    email: 'kozlov@military.gov',
    password: 'kozlov123456',
    first_name: '–°–µ—Ä–≥–µ–π',
    last_name: '–ö–æ–∑–ª–æ–≤',
    rank: '–°–µ—Ä–∂–∞–Ω—Ç',
    role: 'soldier',
    unit: '1-—è —Ä–æ—Ç–∞',
    phone: '+7-900-456-7890',
    avatar_url: 'https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?w=150&h=150&fit=crop&crop=face'
  }
];

// –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
const testTasks = [
  {
    title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
    description: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏',
    status: 'pending',
    priority: 'high',
    assigned_to: '550e8400-e29b-41d4-a716-446655440004',
    created_by: '550e8400-e29b-41d4-a716-446655440002',
    due_date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString()
  },
  {
    title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞',
    description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è',
    status: 'in_progress',
    priority: 'medium',
    assigned_to: '550e8400-e29b-41d4-a716-446655440003',
    created_by: '550e8400-e29b-41d4-a716-446655440001',
    due_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString()
  }
];

// –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã
const testReports = [
  {
    title: '–û—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —É—á–µ–Ω–∏—è—Ö',
    content: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É—á–µ–Ω–∏–π',
    type: 'training',
    status: 'pending',
    created_by: '550e8400-e29b-41d4-a716-446655440003'
  },
  {
    title: '–û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ç–µ—Ö–Ω–∏–∫–∏',
    content: '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–æ–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏',
    type: 'equipment',
    status: 'approved',
    created_by: '550e8400-e29b-41d4-a716-446655440004'
  }
];

async function createTestData() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–∑-–∑–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π)
    console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    await supabase.from('tasks').delete().neq('id', '00000000-0000-0000-0000-000000000000');
    await supabase.from('reports').delete().neq('id', '00000000-0000-0000-0000-000000000000');
    await supabase.from('messages').delete().neq('id', '00000000-0000-0000-0000-000000000000');
    await supabase.from('chats').delete().neq('id', '00000000-0000-0000-0000-000000000000');
    await supabase.from('events').delete().neq('id', '00000000-0000-0000-0000-000000000000');
    await supabase.from('notifications').delete().neq('id', '00000000-0000-0000-0000-000000000000');
    await supabase.from('users').delete().neq('id', '00000000-0000-0000-0000-000000000000');

    // 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ users
    const { data: usersData, error: usersError } = await supabase
      .from('users')
      .insert(testUsers.map(user => ({
        id: user.id,
        email: user.email,
        password_hash: '$2b$10$example.hash.for.demo.purposes.only',
        first_name: user.first_name,
        last_name: user.last_name,
        rank: user.rank,
        role: user.role,
        unit: user.unit,
        phone: user.phone,
        avatar_url: user.avatar_url
      })))
      .select();

    if (usersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersError);
      return;
    } else {
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${usersData.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    }

    // –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Auth
    for (const user of testUsers) {
      try {
        const { data: authData, error: authError } = await supabase.auth.admin.createUser({
          email: user.email,
          password: user.password,
          email_confirm: true,
          user_metadata: {
            first_name: user.first_name,
            last_name: user.last_name,
            rank: user.rank,
            role: user.role,
            unit: user.unit,
            phone: user.phone
          }
        });

        if (authError && !authError.message.includes('already registered')) {
          console.warn(`‚ö†Ô∏è Auth –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.email}:`, authError.message);
        } else {
          console.log(`‚úÖ Auth –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.first_name} ${user.last_name}`);
        }
      } catch (error) {
        console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ Auth –¥–ª—è ${user.email}:`, error.message);
      }
    }

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á...');
    const { data: tasksData, error: tasksError } = await supabase
      .from('tasks')
      .insert(testTasks)
      .select();

    if (tasksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á:', tasksError);
    } else {
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${tasksData.length} –∑–∞–¥–∞—á`);
    }

    // 3. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
    console.log('\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤...');
    const { data: reportsData, error: reportsError } = await supabase
      .from('reports')
      .insert(testReports)
      .select();

    if (reportsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤:', reportsError);
    } else {
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${reportsData.length} –æ—Ç—á–µ—Ç–æ–≤`);
    }

    // 4. –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–æ–≤
    console.log('\nüí¨ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–æ–≤...');
    const testChats = [
      {
        name: '–û–±—â–∏–π —á–∞—Ç',
        type: 'group',
        created_by: '550e8400-e29b-41d4-a716-446655440001'
      },
      {
        name: '–ö–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ',
        type: 'group',
        created_by: '550e8400-e29b-41d4-a716-446655440001'
      }
    ];

    const { data: chatsData, error: chatsError } = await supabase
      .from('chats')
      .insert(testChats)
      .select();

    if (chatsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–æ–≤:', chatsError);
    } else {
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${chatsData.length} —á–∞—Ç–æ–≤`);
    }

    // 5. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
    console.log('\nüìÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π...');
    const testEvents = [
      {
        title: '–ü–ª–∞–Ω–æ–≤—ã–µ —É—á–µ–Ω–∏—è',
        description: '–¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É—á–µ–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è',
        start_date: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000).toISOString(),
        end_date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),
        location: '–ü–æ–ª–∏–≥–æ–Ω ‚Ññ1',
        type: 'training',
        created_by: '550e8400-e29b-41d4-a716-446655440001'
      },
      {
        title: '–°–æ–≤–µ—â–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏—è',
        description: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ —Å–æ–≤–µ—â–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞',
        start_date: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toISOString(),
        end_date: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000 + 2 * 60 * 60 * 1000).toISOString(),
        location: '–®—Ç–∞–±',
        type: 'meeting',
        created_by: '550e8400-e29b-41d4-a716-446655440001'
      }
    ];

    const { data: eventsData, error: eventsError } = await supabase
      .from('events')
      .insert(testEvents)
      .select();

    if (eventsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π:', eventsError);
    } else {
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${eventsData.length} —Å–æ–±—ã—Ç–∏–π`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${usersData?.length || 0}`);
    console.log(`üìã –ó–∞–¥–∞—á–∏: ${tasksData?.length || 0}`);
    console.log(`üìÑ –û—Ç—á–µ—Ç—ã: ${reportsData?.length || 0}`);
    console.log(`üí¨ –ß–∞—Ç—ã: ${chatsData?.length || 0}`);
    console.log(`üìÖ –°–æ–±—ã—Ç–∏—è: ${eventsData?.length || 0}`);
    
    console.log('\nüì± –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ª—é–±—ã–º –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:');
    testUsers.forEach(user => {
      console.log(`  - ${user.email} / ${user.password} (${user.role})`);
    });

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createTestData();