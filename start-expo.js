#!/usr/bin/env node

const { spawn } = require('child_process');
const fs = require('fs');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å —Ñ–∞–π–ª–æ–≤—ã–º–∏ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è–º–∏...');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è watchman
process.env.WATCHMAN_DISABLE_WATCH = '1';
process.env.EXPO_NO_DOTENV = '1';

// –û—á–∏—â–∞–µ–º –∫—ç—à–∏
console.log('üßπ –û—á–∏—â–∞–µ–º –∫—ç—à–∏...');
try {
  if (fs.existsSync('node_modules/.cache')) {
    fs.rmSync('node_modules/.cache', { recursive: true, force: true });
  }
  if (fs.existsSync('.expo')) {
    fs.rmSync('.expo', { recursive: true, force: true });
  }
  if (fs.existsSync('.metro')) {
    fs.rmSync('.metro', { recursive: true, force: true });
  }
} catch (error) {
  console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫—ç—à–∏:', error.message);
}

console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Expo...');

// –ó–∞–ø—É—Å–∫–∞–µ–º expo —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º watchman
const expo = spawn('npx', ['expo', 'start', '--tunnel', '--port', '8081'], {
  stdio: 'inherit',
  env: {
    ...process.env,
    WATCHMAN_DISABLE_WATCH: '1',
    EXPO_NO_DOTENV: '1'
  }
});

expo.on('close', (code) => {
  console.log(`Expo –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
});

expo.on('error', (error) => {
  console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Expo:', error);
});