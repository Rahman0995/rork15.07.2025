#!/usr/bin/env node

const { spawn } = require('child_process');

console.log('๐ ะัััััะน ะทะฐะฟััะบ ะฟัะธะปะพะถะตะฝะธั...');
console.log('๐ก ะะฐะฟััะบ backend ัะตัะฒะตัะฐ...');

// Start backend server
const backend = spawn('node', ['start-backend-simple.js'], {
  stdio: ['inherit', 'pipe', 'pipe']
});

backend.stdout.on('data', (data) => {
  process.stdout.write(`[Backend] ${data}`);
});

backend.stderr.on('data', (data) => {
  process.stderr.write(`[Backend Error] ${data}`);
});

// Wait for backend to start
setTimeout(() => {
  console.log('๐ฑ ะะฐะฟััะบ Expo ะฟัะธะปะพะถะตะฝะธั...');
  
  // Start frontend
  const frontend = spawn('npx', ['expo', 'start', '--clear'], {
    stdio: ['inherit', 'pipe', 'pipe']
  });
  
  frontend.stdout.on('data', (data) => {
    process.stdout.write(`[Frontend] ${data}`);
  });
  
  frontend.stderr.on('data', (data) => {
    process.stderr.write(`[Frontend Error] ${data}`);
  });
  
  // Handle cleanup
  const cleanup = () => {
    console.log('\n๐ ะััะฐะฝะพะฒะบะฐ ะฟัะธะปะพะถะตะฝะธั...');
    backend.kill('SIGINT');
    frontend.kill('SIGINT');
    process.exit(0);
  };
  
  process.on('SIGINT', cleanup);
  process.on('SIGTERM', cleanup);
  
  console.log('๐ ะัะธะปะพะถะตะฝะธะต ะทะฐะฟััะตะฝะพ!');
  console.log('๐ฑ ะัะบัะพะนัะต Expo Go ะฝะฐ ัะตะปะตัะพะฝะต ะธ ะพััะบะฐะฝะธััะนัะต QR ะบะพะด');
  console.log('๐ ะะปะธ ะพัะบัะพะนัะต ะฒะตะฑ ะฒะตััะธั ะฒ ะฑัะฐัะทะตัะต');
  console.log('๐ ะะฐะถะผะธัะต Ctrl+C ะดะปั ะพััะฐะฝะพะฒะบะธ');
  
}, 2000);